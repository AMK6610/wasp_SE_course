
@article{industry,
	abstract = {Background: Developing and maintaining large scale machine learning (ML) based software systems in an industrial setting is challenging. There are no well-established development guidelines, but the literature contains reports on how companies develop and maintain deployed ML-based software systems. Objective: This study aims to survey the literature related to development and maintenance of large scale ML-based systems in industrial settings in order to provide a synthesis of the challenges that practitioners face. In addition, we identify solutions used to address some of these challenges. Method: A systematic literature review was conducted and we identified 72 papers related to development and maintenance of large scale ML-based software systems in industrial settings. The selected articles were qualitatively analyzed by extracting challenges and solutions. The challenges and solutions were thematically synthesized into four quality attributes: adaptability, scalability, safety and privacy. The analysis was done in relation to ML workflow, i.e. data acquisition, training, evaluation, and deployment. Results: We identified a total of 23 challenges and 8 solutions related to development and maintenance of large scale ML-based software systems in industrial settings including six different domains. Challenges were most often reported in relation to adaptability and scalability. Safety and privacy challenges had the least reported solutions. Conclusion: The development and maintenance on large-scale ML-based systems in industrial settings introduce new challenges specific for ML, and for the known challenges characteristic for these types of systems, require new methods in overcoming the challenges. The identified challenges highlight important concerns in ML system development practice and the lack of solutions point to directions for future research.},
	author = {Lucy Ellen Lwakatare and Aiswarya Raj and Ivica Crnkovic and Jan Bosch and Helena Holmstr{\"o}m Olsson},
	doi = {https://doi.org/10.1016/j.infsof.2020.106368},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Machine learning systems, Software engineering, Industrial settings, Challenges, Solutions, SLR},
	pages = {106368},
	title = {Large-scale machine learning systems in real-world industrial settings: A review of challenges and solutions},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584920301373},
	volume = {127},
	year = {2020},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0950584920301373},
	bdsk-url-2 = {https://doi.org/10.1016/j.infsof.2020.106368}}


@article{testing,
	abstract = {Nowadays, we are witnessing a wide adoption of Machine learning (ML) models in many software systems. They are even being tested in safety-critical systems, thanks to recent breakthroughs in deep learning and reinforcement learning. Many people are now interacting with systems based on ML every day, e.g., voice recognition systems used by virtual personal assistants like Amazon Alexa or Google Home. As the field of ML continues to grow, we are likely to witness transformative advances in a wide range of areas, from finance, energy, to health and transportation. Given this growing importance of ML-based systems in our daily life, it is becoming utterly important to ensure their reliability. Recently, software researchers have started adapting concepts from the software testing domain (e.g., code coverage, mutation testing, or property-based testing) to help ML engineers detect and correct faults in ML programs. This paper reviews current existing testing practices for ML programs. First, we identify and explain challenges that should be addressed when testing ML programs. Next, we report existing solutions found in the literature for testing ML programs. Finally, we identify gaps in the literature related to the testing of ML programs and make recommendations of future research directions for the scientific community. We hope that this comprehensive review of software testing practices will help ML engineers identify the right approach to improve the reliability of their ML-based systems. We also hope that the research community will act on our proposed research directions to advance the state of the art of testing for ML programs.},
	author = {Houssem Ben Braiek and Foutse Khomh},
	doi = {https://doi.org/10.1016/j.jss.2020.110542},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Machine learning, Data cleaning, Feature engineering testing, Model testing, Implementation testing},
	pages = {110542},
	title = {On testing machine learning programs},
	url = {https://www.sciencedirect.com/science/article/pii/S0164121220300248},
	volume = {164},
	year = {2020},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121220300248},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2020.110542}}
